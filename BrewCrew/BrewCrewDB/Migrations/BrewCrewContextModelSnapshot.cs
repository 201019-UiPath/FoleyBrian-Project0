// <auto-generated />
using BrewCrewDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BrewCrewDB.Migrations
{
    [DbContext(typeof(BrewCrewContext))]
    partial class BrewCrewContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BrewCrewDB.Models.Beer", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text");

                    b.Property<string>("ABV")
                        .HasColumnType("text");

                    b.Property<string>("BreweryID")
                        .HasColumnType("text");

                    b.Property<string>("IBU")
                        .HasColumnType("text");

                    b.Property<string>("Keg")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OrderID")
                        .HasColumnType("text");

                    b.Property<string>("OrderId")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("BreweryID");

                    b.HasIndex("OrderID");

                    b.ToTable("Beers");
                });

            modelBuilder.Entity("BrewCrewDB.Models.Brewery", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Zip")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Breweries");
                });

            modelBuilder.Entity("BrewCrewDB.Models.Customer", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FName")
                        .HasColumnType("text");

                    b.Property<string>("LName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BrewCrewDB.Models.Manager", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text");

                    b.Property<string>("BreweryID")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FName")
                        .HasColumnType("text");

                    b.Property<string>("LName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("BreweryID")
                        .IsUnique();

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("BrewCrewDB.Models.Order", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text");

                    b.Property<string>("BeerId")
                        .HasColumnType("text");

                    b.Property<string>("BreweryId")
                        .HasColumnType("text");

                    b.Property<string>("CustomerID")
                        .HasColumnType("text");

                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.Property<string>("LineItemId")
                        .HasColumnType("text");

                    b.Property<string>("TableNumber")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("BreweryId");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BrewCrewDB.Models.Beer", b =>
                {
                    b.HasOne("BrewCrewDB.Models.Brewery", "Brewery")
                        .WithMany("Beers")
                        .HasForeignKey("BreweryID");

                    b.HasOne("BrewCrewDB.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID");
                });

            modelBuilder.Entity("BrewCrewDB.Models.Manager", b =>
                {
                    b.HasOne("BrewCrewDB.Models.Brewery", "Brewery")
                        .WithOne("Manager")
                        .HasForeignKey("BrewCrewDB.Models.Manager", "BreweryID");
                });

            modelBuilder.Entity("BrewCrewDB.Models.Order", b =>
                {
                    b.HasOne("BrewCrewDB.Models.Brewery", null)
                        .WithMany("Orders")
                        .HasForeignKey("BreweryId");

                    b.HasOne("BrewCrewDB.Models.Customer", null)
                        .WithMany("Order")
                        .HasForeignKey("CustomerID");
                });
#pragma warning restore 612, 618
        }
    }
}
